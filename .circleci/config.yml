version: 2.1

executors:
  custom-docker:
    docker:
      - image: bharathoptdocker/nodjs-java17-trivy:latest  # Your custom Docker image with Java 17

jobs:
  setup:
    executor: custom-docker
    steps:
      - checkout

      # Install SonarQube Scanner compatible with Java 17
      - run:
          name: Install SonarQube Scanner
          command: |
            curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747.zip
            unzip sonar-scanner.zip -d /opt
            export PATH=/opt/sonar-scanner-4.7.0.2747/bin:$PATH

      - run:
          name: Verify SonarQube Scanner Installation
          command: |
            sonar-scanner --version

      # Your build steps here
      - run:
          name: Build App
          command: |
            cd ~/project
            npm install
            npm run build

      - run:
          name: Run Tests
          command: |
            cd ~/project
            npm test

      - run:
          name: Execute SonarQube Scan
          command: |
            export SONAR_SCANNER_OPTS="-Xmx1024m"
            sonar-scanner \
              -Dsonar.projectKey=myorg24_reactjs \
              -Dsonar.organization=myorg24 \
              -Dsonar.projectName=reactjs \
              -Dsonar.projectVersion=1.0 \
              -Dsonar.sources=. \
              -Dsonar.language=js \
              -Dsonar.host.url=https://sonarcloud.io \
              -Dsonar.exclusions=node_modules/**,build/** \
              -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info \
              -Dsonar.login=$SONAR_TOKEN

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: Build Docker Image
          command: |
            cd ~/project
            if [ -z "$DOCKER_REPO" ] || [ -z "$DOCKER_IMAGE_NAME" ] || [ -z "$DOCKER_IMAGE_TAG" ]; then
              echo "Docker environment variables are not set."
              exit 1
            fi
            docker build -t ${DOCKER_REPO}/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG} .

      - run:
          name: Scan Docker Image
          command: |
            trivy image ${DOCKER_REPO}/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}

      - run:
          name: Publish Docker Image
          command: |
            if [ -z "$DOCKER_USERNAME" ] || [ -z "$DOCKER_PASSWORD" ]; then
              echo "Docker credentials are not set."
              exit 1
            fi
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
            docker push ${DOCKER_REPO}/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}

workflows:
  version: 2
  build:
    jobs:
      - setup:
          context: my-organization-context
