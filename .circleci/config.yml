version: 2.1

executors:
  default:
    docker:
      - image: circleci/python:3.8  # Use the appropriate Docker image for your environment

jobs:
  setup:
    executor: default
    steps:
      - checkout
      - run:
          name: Install Java and Dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y openjdk-11-jdk npm docker.io
      - run:
          name: Define Environment Variables
          command: |
            echo "export GIT_SOURCE_CODE_URL=${GIT_SOURCE_CODE_URL}" >> $BASH_ENV
            echo "export SOURCE_CODE_BRANCH_NAME=${SOURCE_CODE_BRANCH_NAME}" >> $BASH_ENV
            echo "export DOCKER_REPO=${DOCKER_REPO}" >> $BASH_ENV
            echo "export DOCKER_IMAGE_NAME=${DOCKER_IMAGE_NAME}" >> $BASH_ENV
            echo "export DOCKER_IMAGE_TAG=${DOCKER_IMAGE_TAG}" >> $BASH_ENV
            echo "export SONAR_PROJECT_KEY=${SONAR_PROJECT_KEY}" >> $BASH_ENV
            echo "export SONAR_ORGANIZATION=${SONAR_ORGANIZATION}" >> $BASH_ENV
            echo "export SONAR_SOURCES_DIR=${SONAR_SOURCES_DIR}" >> $BASH_ENV
            echo "export SONAR_TOKEN=${SONAR_TOKEN}" >> $BASH_ENV
            source $BASH_ENV

  checkout_code:
    executor: default
    steps:
      - checkout
      - run:
          name: Checkout Source Code
          command: git clone ${GIT_SOURCE_CODE_URL} -b ${SOURCE_CODE_BRANCH_NAME}

  build:
    executor: default
    steps:
      - run:
          name: Install Dependencies and Build
          command: |
            npm install
            npm run build

  docker_build_and_push:
    executor: default
    steps:
      - setup_remote_docker
      - run:
          name: Docker Build
          command: docker build -t ${DOCKER_REPO}/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG} .
      - run:
          name: Docker Push
          command: docker push ${DOCKER_REPO}/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}
      - run:
          name: Docker Scan
          command: docker scan ${DOCKER_REPO}/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}

  sonar_analysis:
    executor: default
    steps:
      - run:
          name: SonarQube Analysis
          command: |
            sonar-scanner \
              -Dsonar.projectKey=${SONAR_PROJECT_KEY} \
              -Dsonar.organization=${SONAR_ORGANIZATION} \
              -Dsonar.sources=${SONAR_SOURCES_DIR} \
              -Dsonar.login=${SONAR_TOKEN}

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - setup
      - checkout_code
      - build
      - docker_build_and_push:
          requires:
            - build
      - sonar_analysis:
          requires:
            - build
