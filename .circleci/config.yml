version: 2.1

executors:
  default:
    docker:
      - image: circleci/python:3.8

jobs:
  git_checkout:
    executor: default
    steps:
      - checkout
      - run:
          name: Define Groovy Scripts Location
          command: |
            echo "export BASE_DIR=${CIRCLE_WORKING_DIRECTORY}/shared-libraries" >> $BASH_ENV
            source $BASH_ENV

      - run:
          name: Checkout Source Code
          command: |
            mkdir -p reports
            groovy ${BASE_DIR}/vars/common/scm-util/git/GitCheckout.groovy \
              --gitSourceCodeUrl ${GIT_SOURCE_CODE_URL} \
              --sourceCodeBranchName ${SOURCE_CODE_BRANCH_NAME} \
              --gitSourceCodeCredential ${GIT_SOURCE_CODE_CREDENTIAL} > reports/git-checkout.log 2>&1
            cat reports/git-checkout.log

  build:
    executor: default
    steps:
      - checkout
      - run:
          name: Build with NPM
          command: |
            groovy ${BASE_DIR}/src/org/common/build/BuildWithNpm.groovy \
              --dockerRepo ${DOCKER_REPO} \
              --dockerImageName ${DOCKER_IMAGE_NAME} \
              --dockerImageTag ${DOCKER_IMAGE_TAG} > reports/build.log 2>&1
            cat reports/build.log

  unit_test:
    executor: default
    steps:
      - checkout
      - run:
          name: Run Unit Tests
          command: |
            groovy ${BASE_DIR}/vars/common/test/RunUnitTests.groovy > reports/unit-test.log 2>&1
            cat reports/unit-test.log

  sonar_analysis:
    executor: default
    steps:
      - checkout
      - run:
          name: SonarQube Analysis
          command: |
            groovy ${BASE_DIR}/vars/common/codeAnalysis/PerformSonarAnalysisForReactjs.groovy \
              --sonarProjectKey ${SONAR_PROJECT_KEY} \
              --sonarOrganization ${SONAR_ORGANIZATION} \
              --sonarSourcesDir ${SONAR_SOURCES_DIR} \
              --sonarToken ${SONAR_TOKEN} > reports/sonar-analysis.log 2>&1
            cat reports/sonar-analysis.log

  docker_build:
    executor: default
    steps:
      - checkout
      - run:
          name: Docker Build
          command: |
            groovy ${BASE_DIR}/vars/common/dockerUtil/DockerBuild.groovy \
              --dockerImageName ${DOCKER_IMAGE_NAME} \
              --dockerImageTag ${DOCKER_IMAGE_TAG} > reports/docker-build.log 2>&1
            cat reports/docker-build.log

  docker_scan:
    executor: default
    steps:
      - checkout
      - run:
          name: Docker Scan
          command: |
            groovy ${BASE_DIR}/vars/common/dockerUtil/DockerScan.groovy \
              --dockerImageName ${DOCKER_IMAGE_NAME} > reports/docker-scan.log 2>&1
            cat reports/docker-scan.log

  docker_publish:
    executor: default
    steps:
      - checkout
      - run:
          name: Docker Publish
          command: |
            groovy ${BASE_DIR}/vars/common/containerPublish/DockerHubPublish.groovy \
              --dockerImageName ${DOCKER_IMAGE_NAME} \
              --dockerRepo ${DOCKER_REPO} \
              --dockerImageTag ${DOCKER_IMAGE_TAG} \
              --dockerCredential ${DOCKER_CREDENTIAL} > reports/docker-publish.log 2>&1
            cat reports/docker-publish.log

workflows:
  version: 2
  build_and_deploy:
    jobs:
      
      - unit_test:
          requires:
            - build
      - sonar_analysis:
          requires:
            - unit_test
      - docker_build:
          requires:
            - sonar_analysis
      - docker_scan:
          requires:
            - docker_build
      - docker_publish:
          requires:
            - docker_scan
