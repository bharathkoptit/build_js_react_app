version: 2.1

executors:
  custom-docker:
    docker:
      - image: bharathoptdocker/mycircleci:latest # Ensure this image has Java 17 installed

jobs:
  build:
    executor: custom-docker
    steps:
      - checkout

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: Set Java 17 as Default
          command: |
            apt-get update
            apt-get install -y openjdk-17-jdk
            update-alternatives --install /usr/bin/java java /usr/lib/jvm/java-17-openjdk-amd64/bin/java 1
            update-alternatives --install /usr/bin/javac javac /usr/lib/jvm/java-17-openjdk-amd64/bin/javac 1
            update-alternatives --set java /usr/lib/jvm/java-17-openjdk-amd64/bin/java
            update-alternatives --set javac /usr/lib/jvm/java-17-openjdk-amd64/bin/javac
            java -version


      - run:
          name: Build App
          command: |
            cd ~/project
            npm install
            npm run build

      - run:
          name: Run Tests
          command: |
            cd ~/project
            npm test

      - run:
          name: Verify SonarQube Scanner Installation
          command: |
            sonar-scanner --version

      - run:
          name: SonarQube Scan
          command: |
            export SONAR_SCANNER_OPTS="-Xmx1024m"
            sonar-scanner \
              -Dsonar.projectKey=myorg24_reactjs \
              -Dsonar.organization=myorg24 \
              -Dsonar.projectName=reactjs \
              -Dsonar.projectVersion=1.0 \
              -Dsonar.sources=. \
              -Dsonar.language=js \
              -Dsonar.host.url=https://sonarcloud.io \
              -Dsonar.exclusions=node_modules/**,build/** \
              -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info \
              -Dsonar.login=$SONAR_TOKEN

      - run:
          name: Build Docker Image
          command: |
            cd ~/project
            if [ -z "$DOCKER_REPO" ] || [ -z "$DOCKER_IMAGE_NAME" ] || [ -z "$DOCKER_IMAGE_TAG" ]; then
              echo "Docker environment variables are not set."
              exit 1
            fi
            docker build -t ${DOCKER_REPO}/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG} .

      - run:
          name: Scan Docker Image
          command: |
            trivy image ${DOCKER_REPO}/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}

      - run:
          name: Publish Docker Image
          command: |
            if [ -z "$DOCKER_USERNAME" ] || [ -z "$DOCKER_PASSWORD" ]; then
              echo "Docker credentials are not set."
              exit 1
            fi
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
            docker push ${DOCKER_REPO}/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}

workflows:
  version: 2
  build:
    jobs:
      - build
