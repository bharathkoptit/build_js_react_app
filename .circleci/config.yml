version: 2.1

executors:
  default:
    docker:
      - image: circleci/python:3.8

jobs:
  setup:
    executor: default
    steps:
      - checkout

      # Install required packages
      - run:
          name: Install Java and other packages
          command: |
            sudo apt-get update
            sudo apt-get install -y unzip wget openjdk-11-jdk

      # Install Groovy
      - run:
          name: Install Groovy
          command: |
            wget https://groovy.jfrog.io/artifactory/dist-release-local/groovy-zips/apache-groovy-binary-5.0.0-alpha-9.zip -O groovy.zip
            sudo unzip groovy.zip -d /opt
            sudo ln -sf /opt/groovy-5.0.0-alpha-9/bin/groovy /usr/local/bin/groovy
            sudo chmod +x /opt/groovy-5.0.0-alpha-9/bin/groovy

      # Set GROOVY_HOME and update PATH environment variable
      - run:
          name: Set GROOVY_HOME and PATH
          command: |
            echo 'export GROOVY_HOME=/opt/groovy-5.0.0-alpha-9' >> $BASH_ENV
            echo 'export PATH=$GROOVY_HOME/bin:$PATH' >> $BASH_ENV
            source $BASH_ENV

      # Verify Groovy installation
      - run:
          name: Verify Groovy Installation
          command: |
            groovy --version || /opt/groovy-5.0.0-alpha-9/bin/groovy --version

      # Install Node.js and npm
      - run:
          name: Install Node.js and npm
          command: |
            curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -
            sudo apt-get install -y nodejs
            node --version
            npm --version

      # Run Groovy script for build
      - run:
          name: Run Build Script
          command: |
            groovy Jenkins/shared-libraries/src/org/common/build/BuildWithNpm.groovy | tee build-script.log

      # Run Groovy script for test
      - run:
          name: Run Test Script
          command: |
            groovy Jenkins/shared-libraries/src/org/common/unitTest/UnitTestWithNpm.groovy | tee test-script.log

      # Run Groovy script for SonarQube analysis
      - run:
          name: Run SonarQube Analysis
          command: |
            groovy Jenkins/shared-libraries/vars/common/codeAnalysis/PerformSonarAnalysisForReactjs.groovy | tee sonar-analysis.log
            # Print the location of the SonarQube report if it generates a local file
            echo "SonarQube analysis completed. Check the SonarQube dashboard for results."

      # Build Docker Image
      - setup_remote_docker:
          version: 20.10.7
      - run:
          name: Build Docker Image
          command: |
            groovy Jenkins/shared-libraries/vars/common/dockerUtil/DockerUtil.groovy | tee docker-build.log

      # Scan Docker Image with Trivy
      - run:
          name: Scan Docker Image
          command: |
            groovy Jenkins/shared-libraries/vars/common/dockerUtil/DockerScan.groovy | tee docker-scan.log
            # Print the location of the Docker scan report if it generates a local file
            echo "Docker scan completed. Check the Trivy scan report for details."

      # Publish Docker Image
      - run:
          name: Publish Docker Image
          command: |
            groovy Jenkins/shared-libraries/vars/common/containerPublish/DockerHubPublish.groovy | tee docker-publish.log

workflows:
  version: 2
  build:
    jobs:
      - setup
