version: 2.1

executors:
  docker-executor:
    docker:
      - image: circleci/python:3.8
    working_directory: ~/project

jobs:
  checkout:
    executor: docker-executor
    steps:
      - checkout
      - run:
          name: Load shared libraries
          command: |
            git clone https://github.com/your-org/shared-libraries.git
            cp -r shared-libraries/* ~/project

  build:
    executor: docker-executor
    steps:
      - checkout
      - run:
          name: Build with npm
          command: |
            npm install
            npm run build

  unit_test:
    executor: docker-executor
    steps:
      - checkout
      - run:
          name: Run unit tests
          command: |
            npm test

  sonar_analysis:
    executor: docker-executor
    steps:
      - checkout
      - run:
          name: Run SonarQube Analysis
          command: |
            sonar-scanner \
              -Dsonar.projectKey=$SONAR_PROJECT_KEY \
              -Dsonar.organization=$SONAR_ORGANIZATION \
              -Dsonar.sources=$SONAR_SOURCES_DIR \
              -Dsonar.host.url=$SONAR_HOST_URL \
              -Dsonar.login=$SONAR_TOKEN \
              | tee sonar-report.txt
      - run:
          name: Print SonarQube report
          command: |
            echo "=== SonarQube Analysis Report ==="
            cat sonar-report.txt
            echo "=== End of SonarQube Analysis Report ==="

  docker_build:
    executor: docker-executor
    steps:
      - checkout
      - run:
          name: Build Docker image
          command: |
            docker build -t $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG . | tee docker-build-log.txt
      - run:
          name: Print Docker build logs
          command: |
            echo "=== Docker Build Logs ==="
            cat docker-build-log.txt
            echo "=== End of Docker Build Logs ==="

  docker_scan:
    executor: docker-executor
    steps:
      - checkout
      - run:
          name: Run Docker scan
          command: |
            docker scan $DOCKER_IMAGE_NAME | tee docker-scan-report.txt
      - run:
          name: Print Docker scan report
          command: |
            echo "=== Docker Scan Report ==="
            cat docker-scan-report.txt
            echo "=== End of Docker Scan Report ==="

  docker_publish:
    executor: docker-executor
    steps:
      - checkout
      - run:
          name: Publish Docker image
          command: |
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD $DOCKER_REGISTRY
            docker push $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG | tee docker-publish-log.txt
      - run:
          name: Print Docker publish logs
          command: |
            echo "=== Docker Publish Logs ==="
            cat docker-publish-log.txt
            echo "=== End of Docker Publish Logs ==="

workflows:
  version: 2
  build_and_test:
    jobs:
      - checkout
      - build
      - unit_test
      - sonar_analysis
      - docker_build
      - docker_scan
      - docker_publish
