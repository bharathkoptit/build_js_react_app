version: 2.1

executors:
  default:
    docker:
      - image: circleci/python:3.8  # Change this to the appropriate Docker image for your environment

jobs:
  checkout:
    executor: default
    steps:
      - checkout
      - run:
          name: Load Scripts
          command: |
            mkdir -p $HOME/shared-libraries
            cp -r Jenkins/shared-libraries/* $HOME/shared-libraries/

  git_checkout:
    executor: default
    steps:
      - checkout
      - run:
          name: Checkout Source Code Repo
          command: |
            git clone -b $SOURCE_CODE_BRANCH_NAME $GIT_SOURCE_CODE_URL source-code
            cd source-code
            git checkout $SOURCE_CODE_BRANCH_NAME

  build:
    executor: default
    steps:
      - checkout
      - run:
          name: Build with npm
          command: |
            cd source-code
            npm install
            npm run build

  unit_test:
    executor: default
    steps:
      - checkout
      - run:
          name: Unit Test
          command: |
            cd source-code
            npm test

  sonar_analysis:
    executor: default
    steps:
      - checkout
      - run:
          name: SonarQube Analysis
          command: |
            cd source-code
            # Add your SonarQube analysis command here

  docker_build:
    executor: default
    steps:
      - checkout
      - run:
          name: Docker Build
          command: |
            docker build -t $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG .

  docker_scan:
    executor: default
    steps:
      - checkout
      - run:
          name: Docker Scan
          command: |
            # Add your Docker scan command here

  docker_publish:
    executor: default
    steps:
      - checkout
      - run:
          name: Docker Publish
          command: |
            echo "$DOCKER_CREDENTIAL" | docker login -u $DOCKER_USER --password-stdin
            docker push $DOCKER_REPO/$DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG

workflows:
  version: 2
  build_and_test:
    jobs:
      - checkout
      - git_checkout
      - build
      - unit_test
      - sonar_analysis
      - docker_build
      - docker_scan
      - docker_publish
