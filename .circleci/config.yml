version: 2.1

executors:
  docker-executor:
    docker:
      - image: circleci/python:3.7  # You can use any image that suits your needs

jobs:
  setup:
    executor: docker-executor
    steps:
      - checkout
      - run:
          name: Print Parameters
          command: |
            echo "GIT_SOURCE_CODE_URL: << parameters.GIT_SOURCE_CODE_URL >>"
            echo "SOURCE_CODE_BRANCH_NAME: << parameters.SOURCE_CODE_BRANCH_NAME >>"
      - run:
          name: Prepare Directory
          command: |
            if [ -d ~/project ]; then
              rm -rf ~/project
            fi
            mkdir -p ~/project
      - run:
          name: Checkout Repository
          command: |
            git clone << parameters.GIT_SOURCE_CODE_URL >> ~/project
            cd ~/project
            if git show-ref --verify --quiet refs/heads/<< parameters.SOURCE_CODE_BRANCH_NAME >>; then
              git checkout << parameters.SOURCE_CODE_BRANCH_NAME >>
            else
              echo "Branch '<< parameters.SOURCE_CODE_BRANCH_NAME >>' not found. Available branches:"
              git branch -r
              exit 1
            fi
      - run:
          name: Install Node.js Dependencies
          command: |
            cd ~/project
            npm install
      - run:
          name: Load and Execute Groovy Scripts
          command: |
            cd ~/project
            baseDir="${PWD}/Jenkins/shared-libraries"
            loadAndExecuteGroovyScript() {
              type=$1
              technology=$2
              scriptName=$3
              scriptPath="${baseDir}/${type}/${technology}/${scriptName}.groovy"
              if [ -f ${scriptPath} ]; then
                echo "Executing ${scriptPath}"
                groovy ${scriptPath}
              else
                echo "Script ${scriptPath} not found!"
                exit 1
              fi
            }
            loadAndExecuteGroovyScript "vars/common/scm-util" "git" "GitCheckout"
            loadAndExecuteGroovyScript "vars/common" "codeAnalysis" "PerformSonarAnalysisForReactjs"
            loadAndExecuteGroovyScript "vars/common" "dockerUtil" "DockerUtil"
            loadAndExecuteGroovyScript "vars/common" "containerPublish" "DockerHubPublish"
            loadAndExecuteGroovyScript "vars/common" "dockerUtil" "DockerScan"
            loadAndExecuteGroovyScript "src/org/common" "build" "BuildWithNpm"
            loadAndExecuteGroovyScript "src/org/common" "unitTest" "UnitTestWithNpm"

  build:
    docker:
      - image: circleci/node:16
    steps:
      - checkout
      - run:
          name: Build Docker Image
          command: |
            cd ~/project
            docker build -t << parameters.DOCKER_REPO >>/<< parameters.DOCKER_IMAGE_NAME >>:<< parameters.DOCKER_IMAGE_TAG >> .

workflows:
  version: 2
  setup_and_build:
    jobs:
      - setup:
          GIT_SOURCE_CODE_URL: "https://github.com/bharathkoptit/build_js_react_app.git"
          SOURCE_CODE_BRANCH_NAME: "master"
      - build:
          requires:
            - setup
          GIT_SOURCE_CODE_URL: "https://github.com/bharathkoptit/build_js_react_app.git"
          SOURCE_CODE_BRANCH_NAME: "master"
          DOCKER_REPO: "bharathoptdocker"
          DOCKER_IMAGE_NAME: "optit-lab-service"
          DOCKER_IMAGE_TAG: "latest"
