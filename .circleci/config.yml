version: 2.1

executors:
  java-executor:
    docker:
      - image: circleci/openjdk:11-jdk
    environment:
      JAVA_HOME: /usr/local/openjdk-11
      GROOVY_HOME: /usr/local/groovy
      PATH: /usr/local/groovy/bin:/usr/local/openjdk-11/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    working_directory: ~/project

jobs:
  install_groovy:
    executor: java-executor
    steps:
      - checkout
      - run:
          name: Install Groovy
          command: |
            wget https://archive.apache.org/dist/groovy/4.0.11/distribution/apache-groovy-sdk-4.0.11.zip
            unzip apache-groovy-sdk-4.0.11.zip
            sudo mv groovy-4.0.11 /usr/local/groovy
            export PATH=$PATH:/usr/local/groovy/bin
            groovy --version

  load_scripts:
    parameters:
      baseDir:
        type: string
        default: "Jenkins/shared-libraries"
    executor: java-executor
    steps:
      - checkout
      - run:
          name: Load Scripts
          command: |
            export PATH=$PATH:/usr/local/groovy/bin
            baseDir="${CIRCLE_WORKING_DIRECTORY}/${BASE_DIR}"
            loadScript() {
              type=$1
              technology=$2
              scriptName=$3
              scriptPath="${baseDir}/${type}/${technology}/${scriptName}.groovy"
              groovy "${scriptPath}"
            }
            gitCheckoutScript=$(loadScript "vars/common/scm-util" "git" "GitCheckout")
            sonarScript=$(loadScript "vars/common" "codeAnalysis" "PerformSonarAnalysisForReactjs")
            dockerBuildScript=$(loadScript "vars/common" "dockerUtil" "DockerUtil")
            dockerPublishScript=$(loadScript "vars/common" "containerPublish" "DockerHubPublish")
            dockerScanScript=$(loadScript "vars/common" "dockerUtil" "DockerScan")
            buildWithNpmScript=$(loadScript "src/org/common" "build" "BuildWithNpm")
            unitTestWithNpmScript=$(loadScript "src/org/common" "unitTest" "UnitTestWithNpm")

  git_checkout:
    parameters:
      sourceCodeUrl:
        type: string
      sourceCodeBranchName:
        type: string
      gitSourceCodeCredential:
        type: string
    executor: java-executor
    steps:
      - checkout
      - run:
          name: Git Checkout Source Code Repo
          command: |
            git config --global credential.helper store
            echo "https://${GIT_USER}:${GIT_TOKEN}@${SOURCE_CODE_URL}" > ~/.git-credentials
            git clone -b "${SOURCE_CODE_BRANCH_NAME}" "${SOURCE_CODE_URL}"

  install_dependencies:
    executor: java-executor
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: npm install

  build:
    executor: java-executor
    steps:
      - checkout
      - run:
          name: Build
          command: npm run build

  test:
    executor: java-executor
    steps:
      - checkout
      - run:
          name: Unit Test
          command: npm test

  sonar_analysis:
    executor: java-executor
    steps:
      - checkout
      - run:
          name: SonarQube Analysis
          command: |
            export PATH=$PATH:/usr/local/groovy/bin
            groovy -e "${sonarScript}.performSonarCloudAnalysis('${SONAR_PROJECT_KEY}', '${SONAR_ORGANIZATION}', '${SONAR_SOURCES_DIR}', '${SONAR_TOKEN}')"

  docker_build:
    docker:
      - image: circleci/openjdk:11-jdk
    steps:
      - setup_remote_docker:
          version: 20.10.7
      - run:
          name: Docker Build
          command: |
            export PATH=$PATH:/usr/local/groovy/bin
            groovy -e "${dockerBuildScript}.dockerBuild('${DOCKER_IMAGE_NAME}', '${DOCKER_IMAGE_TAG}')"

  docker_scan:
    docker:
