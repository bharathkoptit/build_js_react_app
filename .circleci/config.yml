version: 2.1
executors:
  default:
    docker:
      - image: bharathoptdocker/nodjs-java17-trivy:latest

jobs:
  setup:
    executor: default
    steps:
      - checkout

      # Debugging: List contents of project directory
      - run:
          name: List Project Files
          command: |
            echo "Listing contents of ~/project:"
            ls -R ~/project

      # Check script existence
      - run:
          name: Check Script Existence
          command: |
            cd ~/project
            if [ -f "Jenkins/shared-libraries/src/org/common/build/BuildWithNpm.groovy" ]; then
              echo "BuildWithNpm.groovy exists."
            else
              echo "BuildWithNpm.groovy does not exist."
              exit 1
            fi

      # Install dependencies and build React app
      - run:
          name: Build App
          command: |
            cd ~/project
            npm install
            npm run build

      # Optionally, run tests or other commands
      - run:
          name: Run Tests
          command: |
            cd ~/project
            npm test

      # Build Docker Image
      - setup_remote_docker:
          version: 20.10.7
      - run:
          name: Build Docker Image
          command: |
            cd ~/project
            if [ -z "$DOCKER_REPO" ] || [ -z "$DOCKER_IMAGE_NAME" ] || [ -z "$DOCKER_IMAGE_TAG" ]; then
              echo "Docker environment variables are not set."
              exit 1
            fi
            docker build -t ${DOCKER_REPO}/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG} .

      # Scan Docker Image with Trivy
      - run:
          name: Scan Docker Image
          command: |
            trivy image ${DOCKER_REPO}/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}

      # Publish Docker Image
      - run:
          name: Publish Docker Image
          command: |
            if [ -z "$DOCKER_USERNAME" ] || [ -z "$DOCKER_PASSWORD" ]; then
              echo "Docker credentials are not set."
              exit 1
            fi
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
            docker push ${DOCKER_REPO}/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}

workflows:
  version: 2
  build:
    jobs:
      - setup
