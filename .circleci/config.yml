version: 2.1

executors:
  java-node-docker-executor:
    docker:
      - image: circleci/python:3.9  # This image has curl and apt-get
    working_directory: ~/repo
    environment:
      # Set environment variables if needed
      GROOVY_HOME: /usr/share/groovy
      PATH: /usr/share/groovy/bin:$PATH

jobs:
  install_dependencies:
    executor: java-node-docker-executor
    steps:
      - checkout
      - run:
          name: Install Basic Utilities
          command: |
            echo "Installing basic utilities..."
            sudo apt-get update
            sudo apt-get install -y curl bash unzip
            # Verify installations
            curl --version
            bash --version
      - run:
          name: Install Node.js
          command: |
            echo "Installing Node.js..."
            curl -sL https://deb.nodesource.com/setup_14.x | sudo bash -
            sudo apt-get install -y nodejs
            # Verify Node.js installation
            node --version
            npm --version

  install_groovy:
    executor: java-node-docker-executor
    steps:
      - checkout
      - run:
          name: Install Groovy
          command: |
            echo "Installing Groovy..."
            curl -s https://get.sdkman.io | bash
            source "$HOME/.sdkman/bin/sdkman-init.sh"
            sdk install groovy
            # Verify Groovy installation
            groovy -version

  install_docker_trivy:
    executor: java-node-docker-executor
    steps:
      - checkout
      - run:
          name: Install Docker Trivy
          command: |
            echo "Installing Docker Trivy..."
            curl -fsSL https://github.com/aquasecurity/trivy/releases/download/v0.34.1/trivy_0.34.1_Linux-x86_64.tar.gz -o trivy.tar.gz
            tar zxvf trivy.tar.gz -C /usr/local/bin trivy
            # Verify Trivy installation
            trivy --version

  sonar_analysis:
    executor: java-node-docker-executor
    steps:
      - checkout
      - run:
          name: Install SonarQube Scanner
          command: |
            echo "Installing SonarQube Scanner..."
            curl -sSLo sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
            unzip sonar-scanner-cli.zip -d /opt
            ln -s /opt/sonar-scanner-4.7.0.2747-linux/bin/sonar-scanner /usr/local/bin/sonar-scanner
            # Verify SonarQube Scanner installation
            sonar-scanner --version

  build:
    executor: java-node-docker-executor
    steps:
      - checkout
      - run:
          name: Build Project
          command: |
            echo "Building project..."
            # Add build commands here

  test:
    executor: java-node-docker-executor
    steps:
      - checkout
      - run:
          name: Run Tests
          command: |
            echo "Running tests..."
            # Add test commands here

  docker_build:
    executor: java-node-docker-executor
    steps:
      - checkout
      - run:
          name: Build Docker Image
          command: |
            echo "Building Docker image..."
            # Add Docker build commands here

  docker_scan:
    executor: java-node-docker-executor
    steps:
      - checkout
      - run:
          name: Scan Docker Image with Trivy
          command: |
            echo "Scanning Docker image with Trivy..."
            trivy image --exit-code 1 --severity CRITICAL,HIGH your-docker-image:latest

  docker_publish:
    executor: java-node-docker-executor
    steps:
      - checkout
      - run:
          name: Publish Docker Image
          command: |
            echo "Publishing Docker image..."
            # Add Docker publish commands here

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - install_dependencies
      - install_groovy:
          requires:
            - install_dependencies
      - install_docker_trivy:
          requires:
            - install_groovy
      - sonar_analysis:
          requires:
            - install_docker_trivy
      - build:
          requires:
            - sonar_analysis
      - test:
          requires:
            - build
      - docker_build:
          requires:
            - test
      - docker_scan:
          requires:
            - docker_build
      - docker_publish:
          requires:
            - docker_scan
