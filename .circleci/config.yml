version: 2.1

jobs:
  build:
    docker:
      - image: circleci/python:3.8  # Choose the appropriate Docker image for your environment
    steps:
      - checkout  # Check out the source code

      # Print the current working directory
      - run:
          name: Print Working Directory
          command: |
            echo "Current working directory:"
            pwd

      # Set BASE_DIR environment variable
      - run:
          name: Set BASE_DIR
          command: |
            echo "export BASE_DIR=${CIRCLE_WORKING_DIRECTORY}/build_js_react_app/Jenkins/shared-libraries" >> $BASH_ENV
            source $BASH_ENV
            echo "BASE_DIR is set to: ${BASE_DIR}"

      # List the directory structure at BASE_DIR
      - run:
          name: List Directory Structure
          command: |
            echo "Directory structure at BASE_DIR:"
            ls -R ${BASE_DIR} || echo "Directory not found"
      # Install required packages
      - run:
          name: Install Java and other packages
          command: |
            sudo apt-get update
            sudo apt-get install -y unzip wget openjdk-11-jdk
      # Install Groovy
      - run:
          name: Install Groovy
          command: |
            wget https://groovy.jfrog.io/artifactory/dist-release-local/groovy-zips/apache-groovy-binary-5.0.0-alpha-9.zip -O groovy.zip
            sudo unzip groovy.zip -d /opt
            sudo ln -sf /opt/groovy-5.0.0-alpha-9/bin/groovy /usr/local/bin/groovy
            sudo chmod +x /opt/groovy-5.0.0-alpha-9/bin/groovy

      # Set GROOVY_HOME and update PATH environment variable
      - run:
          name: Set GROOVY_HOME and PATH
          command: |
            echo 'export GROOVY_HOME=/opt/groovy-5.0.0-alpha-9' >> $BASH_ENV
            echo 'export PATH=$GROOVY_HOME/bin:$PATH' >> $BASH_ENV
            source $BASH_ENV

      # Verify Groovy installation
      - run:
          name: Verify Groovy Installation
          command: |
            groovy --version || /opt/groovy-5.0.0-alpha-9/bin/groovy --version

      # Check for the Groovy script and run it if it exists
      - run:
          name: Run Groovy Script
          command: |
            if [ -f "${BASE_DIR}/src/org/common/build/BuildWithNpm.groovy" ]; then
                echo "Groovy script found. Running the script..."
                mkdir -p reports  # Create the reports directory if it doesn't exist
                groovy ${BASE_DIR}/src/org/common/build/BuildWithNpm.groovy > reports/build.log 2>&1
                cat reports/build.log
            else
                echo "Error: Groovy script not found at: ${BASE_DIR}/src/org/common/build/BuildWithNpm.groovy"
                exit 1
            fi

workflows:
  version: 2
  build:
    jobs:
      - build
