pipeline {
    agent any
    
    stages {
        stage('Load Scripts') {
            steps {
                script {
                    // Load necessary scripts from shared library
                    def gitCheckoutScript = load 'Jenkins/shared-libraries/vars/common/scm-util/git/GitCheckout.groovy'
                    def sonarScript = load 'Jenkins/shared-libraries/vars/common/codeAnalysis/PerformSonarAnalysisForReactjs.groovy'
                    def dockerBuildScript = load 'Jenkins/shared-libraries/vars/common/dockerUtil/DockerUtil.groovy'
                    def dockerPublishScript = load 'Jenkins/shared-libraries/vars/common/containerPublish/DockerHubPublish.groovy'
                    def buildWithNpmScript = load 'Jenkins/shared-libraries/src/org/common/build/BuildWithNpm.groovy'
                    def unitTestWithNpmScript = load 'Jenkins/shared-libraries/src/org/common/unitTest/UnitTestWithNpm.groovy'

                    // Call the common stages script
                    commonStagesScript.call(
                        gitCheckoutScript,
                        sonarScript,
                        dockerBuildScript,
                        dockerPublishScript,
                        buildWithNpmScript,
                        unitTestWithNpmScript,
                        params // Ensure params is defined or passed correctly
                    )
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline execution completed.'
        }
    }
}
